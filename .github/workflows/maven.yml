# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Create env variable using date
      id: ts_file
      run: |
        echo "TS_FILE=$(date +'%y%m%d_%H%M')" >> $GITHUB_ENV
    - name: Zip the test reports
      run: zip -r scalatest_${{env.TS_FILE}}.zip ${PWD}/target/scalatest
    - name: Upload the test reports to dist folder
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: scalatest_${{env.TS_FILE}}.zip
    - name: Make the script files executable
      run: chmod +x ${PWD}/src/test/qa/run_tests.sh
    - name: Run QA tests
      run: |
        ${PWD}/src/test/qa/run_tests.sh

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
